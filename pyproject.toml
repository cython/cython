[build-system]
requires = ["setuptools"]

[tool.cibuildwheel]
build-verbosity = 2
skip = [
    "pp*", "gp*", "cp31?t-*", "cp36*", "cp37*",
    # The platforms below are non-core platforms that we're providing
    # Stable ABI (>3.9) wheels to. Python 3.8 is excluded and will use
    # pure-Python wheels. cibuildwheel will identify Stable ABI wheels and
    # only build them for the one Python version. It will test them for all
    # Python versions though.
    "cp38*aarch64", "cp38*i686", "cp38*win32", "cp38*win_arm64"
]
enable = ["cpython-prerelease"]
# As a quick sanity check, run Cython on some of its own sources
# (not a full rebuild though, because it uses the local files and not the installed wheel).
test-command = [
    "cython {project}/Cython/Compiler/Visitor.py",
    "cython {project}/Cython/Compiler/Scanning.py",
    "cython {project}/Cython/Compiler/Parsing.py",
]

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64", "i686"]
repair-wheel-command = "auditwheel repair --strip -w {dest_dir} {wheel}"

[tool.cibuildwheel.linux.environment]
CFLAGS = "-O3 -g0 -pipe -fPIC -march=core2 -mno-ssse3"
AR = "gcc-ar"
NM = "gcc-nm"
RANLIB = "gcc-ranlib"

[[tool.cibuildwheel.overrides]]
select = "*aarch64"
environment = {CFLAGS = "-O3 -g0 -pipe -fPIC -march=armv8-a -mtune=cortex-a72", AR = "gcc-ar", NM = "gcc-nm", RANLIB = "gcc-ranlib", CYTHON_LIMITED_API = "true" }

[[tool.cibuildwheel.overrides]]
select = "*i686"
inherit.environment = "append"
environment = { "CYTHON_LIMITED_API" = "true"}

[[tool.cibuildwheel.overrides]]
select = "*win32"
inherit.environment = "append"
environment.CYTHON_LIMITED_API = "true"

[[tool.cibuildwheel.overrides]]
select = "*win_arm64"
inherit.environment = "append"
environment.CYTHON_LIMITED_API = "true"

[tool.cibuildwheel.windows]
archs = ["AMD64", "x86", "ARM64"]

[tool.cibuildwheel.macos]
# https://cibuildwheel.readthedocs.io/en/stable/faq/#what-to-provide suggests to provide
# x86_64 and one of universal2 or arm64 wheels.  x86_64 is still required by older pips,
# so additional arm64 wheels should suffice.
archs = ["x86_64", "arm64"]
