name: CI

on:
  push:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  ci:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      # MATRIX:
      # =======
      # Required parameters:
      #  os                  the os to run on
      #  python-version      the python version to use
      #  backend             the backend to use
      #  env                 any additional env variables. Set to '{}' for none
      # Optional parameters:
      #  allowed_failure     whether the job is allowed to fail
      #  extra_hash          extra hash str to differentiate from other caches with similar name (must always start with '-')
      matrix:
        os: [ubuntu-18.04]
        backend: [c]
        python-version: [pypy-3.7]
        env: [{ NO_CYTHON_COMPILE: 1 }]



    # This defaults to 360 minutes (6h) which is way too long and if a test gets stuck, it can block other pipelines.
    # From testing, the runs tend to take ~20 minutes for ubuntu / macos and ~40 for windows,
    # so a limit of 50 minutes should be enough. This can always be changed in the future if needed.
    timeout-minutes: 50
    runs-on: ${{ matrix.os }}

    env:
      BACKEND: ${{ matrix.backend }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      GCC_VERSION: 8
      USE_CCACHE: 1
      CCACHE_SLOPPINESS: "pch_defines,time_macros"
      CCACHE_COMPRESS: 1
      CCACHE_MAXSIZE: "200M"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache [ccache]
        uses: pat-s/always-upload-cache@v3.0.1
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache${{ matrix.extra_hash }}-${{ matrix.python-version }}-${{ matrix.backend == 'c' || matrix.backend == 'c,cpp' }}-${{ contains(matrix.backend, 'cpp') }}-${{ hashFiles('**/test-requirements*.txt', '**/ci.yml', '**/ci-run.sh') }}

      - name: Run CI
        continue-on-error: ${{ matrix.allowed_failure || false }}
        env: ${{ matrix.env }}
        run: bash ./Tools/ci-run.sh

      - name: Upload HTML docs
        uses: actions/upload-artifact@v3
        with:
          name: htmldocs
          path: docs/build/html
          if-no-files-found: ignore

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ runner.os }}${{ matrix.extra_hash }}
          path: dist/*.whl
          if-no-files-found: ignore


  pycoverage:
    runs-on: ubuntu-18.04

    env:
      BACKEND: c,cpp
      OS_NAME: ubuntu-18.04
      PYTHON_VERSION: "3.10"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Run Coverage
        env: { COVERAGE: 1, NO_CYTHON_COMPILE: 1 }
        run: bash ./Tools/ci-run.sh

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: pycoverage_html
          path: coverage-report-html

  cycoverage:
    runs-on: ubuntu-18.04

    env:
      BACKEND: c,cpp
      OS_NAME: ubuntu-18.04
      PYTHON_VERSION: 3.9

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Run Coverage
        env: { COVERAGE: 1 }
        run: bash ./Tools/ci-run.sh

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: cycoverage_html
          path: coverage-report-html
