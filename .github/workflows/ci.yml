name: CI

on:
  push:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  ci:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      # MATRIX:
      # =======
      # Required parameters:
      #  os                  the os to run on
      #  python-version      the python version to use
      #  backend             the backend to use
      #  env                 any additional env variables. Set to '{}' for none
      # Optional parameters:
      #  allowed_failure     whether the job is allowed to fail
      #  extra_hash          extra hash str to differentiate from other caches with similar name (must always start with '-')
      matrix:
        # Tests [amd64]
        #
        # FIXME: 'cpp' tests seems to fail due to compilation errors (numpy_pythran_unit)
        # in all python versions and test failures (builtin_float) in 3.5<
        os: [ubuntu-latest, windows-latest, macos-latest]
        backend: [c, cpp]
        python-version:
          - "3.12"
        env: [{}]

        include:
          # Temporary - Allow failure on Python 3.12 jobs (https://github.com/cython/cython/issues/5470)
          - python-version: "3.12"
            allowed_failure: true

          # Ubuntu sub-jobs:
          # ================
          # GCC 11 (with latest language standards)
          - os: ubuntu-latest
            python-version: "3.12"
            allowed_failure: true
            backend: "c,cpp"
            env: { LIMITED_API: "--limited-api", EXCLUDE: "--no-file" }
            extra_hash: "-limited_api"


    # This defaults to 360 minutes (6h) which is way too long and if a test gets stuck, it can block other pipelines.
    # From testing, the runs tend to take ~20 minutes for ubuntu / macos and ~40 for windows,
    # so a limit of 80 minutes should be enough. This can always be changed in the future if needed.
    timeout-minutes: 80
    runs-on: ${{ matrix.os }}

    env:
      BACKEND: ${{ matrix.backend }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      MACOSX_DEPLOYMENT_TARGET: 10.15
      GCC_VERSION: 11
      USE_CCACHE: 1
      CCACHE_SLOPPINESS: "pch_defines,time_macros"
      CCACHE_COMPRESS: 1
      CCACHE_MAXSIZE: "200M"

    steps:
      - name: actions/checkout@v4
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: actions/setup-python@v4
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: hendrikmuhs/ccache-action@v1.2
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: ${{ startsWith(runner.os, 'windows') && 'sccache' || 'ccache' }}  # fake ternary
          key: ${{ runner.os }}-hendrikmuhs-ccache${{ matrix.extra_hash }}-${{ matrix.python-version }}-${{ matrix.backend == 'c' || matrix.backend == 'c,cpp' }}-${{ contains(matrix.backend, 'cpp') }}-${{ hashFiles('test-requirements*.txt', '.github/**/ci.yml', 'Tools/**/ci-run.sh') }}
          max-size: ${{ env.CCACHE_MAXSIZE }}

      - name: Run CI
        continue-on-error: ${{ matrix.allowed_failure || false }}
        env: ${{ matrix.env }}
        run: bash ./Tools/ci-run.sh

      - name: actions/upload-artifact@v3
        uses: actions/upload-artifact@v3
        with:
          name: htmldocs
          path: docs/build/html
          if-no-files-found: ignore

      - name: actions/upload-artifact@v3
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ runner.os }}${{ matrix.extra_hash }}
          path: dist/*.whl
          if-no-files-found: ignore


  pycoverage:
    runs-on: ubuntu-latest

    env:
      BACKEND: c,cpp
      OS_NAME: ubuntu-latest
      PYTHON_VERSION: "3.11"

    steps:
      - name: actions/checkout@v4
        uses: actions/checkout@v4

      - name: actions/setup-python@v4
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run Coverage
        env: { COVERAGE: 1, NO_CYTHON_COMPILE: 1 }
        run: bash ./Tools/ci-run.sh

      - name: actions/upload-artifact@v3
        uses: actions/upload-artifact@v3
        with:
          name: pycoverage_html
          path: coverage-report-html

  cycoverage:
    runs-on: ubuntu-latest

    env:
      BACKEND: c,cpp
      OS_NAME: ubuntu-latest
      PYTHON_VERSION: "3.11"

    steps:
      - name: actions/checkout@v4
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: actions/setup-python@v4
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run Coverage
        env: { COVERAGE: 1 }
        run: bash ./Tools/ci-run.sh

      - name: actions/upload-artifact@v3
        uses: actions/upload-artifact@v3
        with:
          name: cycoverage_html
          path: coverage-report-html

  codespell:
    name: Check for spelling errors
    runs-on: ubuntu-latest

    steps:
      - name: actions/checkout@v4
        uses: actions/checkout@v4

      - name: codespell-project/actions-codespell@v2
        uses: codespell-project/actions-codespell@v2
